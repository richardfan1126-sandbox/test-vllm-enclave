---
name: Build and sign EIF
on:
  push:
    branches:
      - main

jobs:
  build_and_sign_eif:
    name: Build and sign EIF

    runs-on: ubuntu-latest
    # runs-on:
    #   group: large-nitro-enclave-build-runner-group

    permissions:
      contents: write
      id-token: write
      attestations: write
      packages: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup oras
        uses: oras-project/setup-oras@ee7dbe1144cb00080a89497f937dae78f85fce29  # oras-project/setup-oras@v1.1.0
        with:
          version: 1.1.0

      - name: Log into ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d  # docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df  # aws-actions/configure-aws-credentials@v4.2.1
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}

      - name: Run build script
        id: run-build-script
        env:
          DOCKER_CONTEXT_DIR: "enclave/"
          DOCKERFILE_PATH: Dockerfile
          EIF_OUTPUT_PATH: ${{ github.workspace }}/eif-output
        shell: bash
        run: ${{ github.workspace }}/.github/workflows/scripts/build-eif.sh

      - name: Push EIF info to ghcr.io
        id: push-eif-info
        shell: bash
        env:
          EIF_INFO_PATH: ${{ steps.run-build-script.outputs.eif-info-path }}
          EIF_INFO_FILE_NAME: eif-info.txt
          ARTIFACT_TAG: ${{ github.sha }}
        run: |
          WORKDIR="${{ github.workspace }}/artifact-push/"

          mkdir ${WORKDIR}
          cd ${WORKDIR}

          cp "${EIF_INFO_PATH}" "${WORKDIR}/${EIF_INFO_FILE_NAME}"

          mkdir tmp/

          PCR0=$(jq -r ".Measurements.PCR0" ${WORKDIR}/${EIF_INFO_FILE_NAME})
          PCR1=$(jq -r ".Measurements.PCR1" ${WORKDIR}/${EIF_INFO_FILE_NAME})
          PCR2=$(jq -r ".Measurements.PCR2" ${WORKDIR}/${EIF_INFO_FILE_NAME})

          oras push \
            --export-manifest tmp/manifest.json \
            --annotation "PCR0=${PCR0}" \
            --annotation "PCR1=${PCR1}" \
            --annotation "PCR2=${PCR2}" \
            "ghcr.io/${{ github.repository }}:${ARTIFACT_TAG}" \
            "${EIF_INFO_FILE_NAME}"

          DIGEST=$(sha256sum tmp/manifest.json | cut -d " " -f 1)

          echo "digest=${DIGEST}" >> "${GITHUB_OUTPUT}"
          echo "path=ghcr.io/${{ github.repository }}" >> "${GITHUB_OUTPUT}"

      - name: Github attest (EIF info)
        id: github-attest-eif-info
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be  # actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ steps.push-eif-info.outputs.path }}
          subject-digest: "sha256:${{ steps.push-eif-info.outputs.digest }}"
          push-to-registry: true

      - name: Github attest (EIF file)
        id: github-attest-eif-file
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be  # actions/attest-build-provenance@v2.4.0
        with:
          subject-path: '${{ steps.run-build-script.outputs.eif-file-path }}, ${{ steps.run-build-script.outputs.eif-info-path }}'

      - name: Upload artifacts to S3
        id: upload-artifacts-to-s3
        env:
          S3_PREFIX: s3://${{ vars.S3_BUCKET_NAME }}/${{ github.sha }}/
          AWS_REGION: ${{ vars.AWS_REGION }}
        shell: bash
        run: |
          aws s3 cp ${{ steps.run-build-script.outputs.eif-file-path }} ${S3_PREFIX}
          aws s3 cp ${{ steps.run-build-script.outputs.eif-info-path }} ${S3_PREFIX}
          aws s3 cp ${{ steps.github-attest-eif-file.outputs.bundle-path }} ${S3_PREFIX}
